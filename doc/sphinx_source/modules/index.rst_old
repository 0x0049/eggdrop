************************
Standard Eggdrop Modules
************************

One of the strengths of Eggdrop is the use of modules to add capability. While modules can be created and distributed by anyone, Eggdrop ships with some standard modules maintained by the development team. Modules can be added by using the ``loadmodule`` command in your config file. For more information about a module and it's associated settings, click a module below.

:ref:`assoc`
============
This module allows you to add displaynames to the numeric partyline channels.

:ref:`blowfish`
===============
This deprecated module is responsible for hashing passwords for storage in the userfile, but is still required for older userfiles. As of version 1.9.0, PBKDF2 is the newly recommended hashing module and newly-started bots should use that instead.

.. note::  Eggdrop will not start without an encyrption module loaded.

.. warning:: If you change the encryption method used (ie, a different encryption module), saved passwords will become unusable.

:ref:`channels`
===============
This module provides channel-related support for the bot. Without it, you won't be able to make the bot join a channel or save channel specific userfile information.

:ref:`compress`
===============
This module provides support for file compression. It can be used to compress files via Tcl or to transfer the userfile compressed during the share process, saving bandwidth.

.. note:: This module requires the share module to be loaded prior to use.

:ref:`console`
==============
This module provides storage of console settings when you exit the bot or type .store on the partyline.

:ref:`ctcp`
===========
This module provides CTCP capability.

.. note:: This module requires the server module to be loaded prior to use.

:ref:`dns`
==========
This deprecated module previously provided asynchronous DNS request capability. It has been deprecated in favor of the new core threaded DNS capability. It is no longer maintained, but some users may still desire/require it's use.

:ref:`filesys`
==============
This module provides an area within the bot where users can store and manage files. With this module, the bot is usable as a file server.

.. note:: This module requires the transfer module to be loaded prior to use.

:ref:`ident`
============
This module adds Eggdrop support for the externally-provided oident service, or alternatively the ability for Eggdrop to act as its own ident daemon.

:ref:`irc`
==========
This module controls the bots interaction on IRC. It allows the bot to join channels, etc. You have to load this if you want your bot to come on irc.

.. note:: This module requires the server and channel modules to be loaded prior to use.

:ref:`notes`
============
This module provides support for storing of notes for users from each other. Note sending between currently online users is supported in the core, this is only for storing the notes for later retrieval.

:ref:`pbkdf2`
=============
This module is responsible for hashing passwords for storage in the userfile. As of version 1.9.0, PBKDF2 is the newly recommended hashing module.

:ref:`seen`
===========
This module provides very basic seen commands via msg, on channel or via dcc. This module works only for users in the bot's userlist. If you are looking for a better and more advanced seen module, try the gseen module by G'Quann. You can find it at http://www.kreativrauschen.com/gseen.mod/.

:ref:`server`
=============
This module provides the core server support. You have to load this if you want your bot to come on IRC (or not, if you want your bot to be a limbo bot).

:ref:`share`
============
This module provides userfile sharing support between two directly linked bots.

.. note:: This module requires the share and channel modules to be loaded prior to use.

:ref:`transfer`
===============
The transfer module provides DCC SEND/GET support and userfile transfer support for userfile sharing.

:ref:`twitch`
=============
This module *attempts* to provide connectivity with the Twitch gaming platform. While Twitch provides an IRC gateway to connect with it's streaming service, it does not claim to (and certainly does not) follow the IRC RFC in any meaningful way. The intent of this module is not to provide the full spectrum of management functions typically associated with Eggdrop; but rather focus on a few key functions.

.. note:: This module requires the irc module to be loaded prior to use.

:ref:`uptime`
=============
This module reports uptime statistics to http://uptime.eggheads.org. Go look and see what your uptime is! It takes about 9 hours to show up, so if your new bot isn't listed, try again later.

.. note:: This module requires the server module to be loaded prior to use.

:ref:`woobie`
=============
This is for demonstrative purposes only. If you are looking for starting point in writing modules, woobie is the right thing.
